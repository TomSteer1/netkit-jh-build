.TH NETKIT.CONF 5 2022-09-04 Linux "Netkit-JH Manual"
.SH NAME
netkit.conf \- configuration of a Netkit-JH install
.SH SYNOPSIS
.nf
.I /etc/netkit.conf
.BI NETKIT_HOME /netkit.conf
.I ~/.netkit/netkit.conf

.BI NETKIT_HOME /netkit.conf.default
.fi
.SH DESCRIPTION
This file contains configuration variables for the Netkit-JH install.
Some assignments affect how Netkit-JH operates,
such as setting the paths used by runtime files,
and some assignments are default values for new virtual machine launches.
.PP
The file format is actually just a shell script containing variable
assignments.
Each line should therefore either be a valid Bash variable assignment,
a comment, or blank line.
Whilst it can contain scripts, its better practice that it does not
(unless a variable depends on a computed value).
.PP
No check is performed on the configuration's validity,
so each variable must have an acceptable value otherwise the user runs a risk
of generating runtime errors which may or may not be silent.
If the system does not perform as expected after changing the configuration,
revert the change and if that does not fix the issue,
empty the user-defined configuration files so the program just uses the
defaults.
.PP
Netkit-JH has a read-only file,
.RI \fBNETKIT_HOME\fR /netkit.conf.default ,
storing the default configuration values.
This should never be changed,
and instead users should override values in a
.I netkit.conf
file created in one of the three following locations:
.RS
.TP
.I /etc/netkit.conf
The system-wide configuration file.
This is read first after the default file,
hence overridable by any of the more localised configuration files.
.TP
.BI NETKIT_HOME /netkit.conf
This file is used over the system-wide one in the event of multiple Netkit-JH
installs existing on the same machine.
This is the recommended configuration file to use and was the default in
previous versions of Netkit.
.TP
.I ~/.netkit/netkit.conf
Settings here override those declared in the system and install-wide files.
This file should be used if the same Netkit-JH install has multiple users who
want different configurations.
.RE
.SS Miscellaneous configuration parameters
.TP
.B CONFIG_VERSION
The Netkit-JH configuration file version.
This is metadata for version control and is used in development to indicate
when parameters have been added, deprecated, removed, or had their default
value changed.
.IP
There is no need for the user to change this value.
.TP
.B LOGFILENAME
Path of the log file that records each Netkit-JH command issued and its
arguments.
Each entry is timestamped and attributed to the user who ran the command.
Setting this to an empty string will disable logging.
.TP
.B MCONSOLE_DIR
Path to the directory that stores temporary files used by the UML management
console.
When launched, a machine will create a subdirectory named with its hostname
with a socket and PID file for the management console.
Since the subdirectory is named with just the hostname,
it is recommended that each Netkit-JH user sets a different
.B MCONSOLE_DIR
value so conflicts with same-named hostnames ran by different users are
avoided.
.TP
.B VPACKAGE_MOUNT_POINT
Default mount directory used by
.BR vpackage (1).
.SS Virtual hub configuration
Please note: due to restrictions in the UML kernel command line,
paths used by the virtual hubs must not contain commas or whitespace.
.TP
.B HUB_SOCKET_DIR
Path to the directory that stores virtual hub socket files.
Unlike
.BR MCONSOLE_DIR ,
different users can share the same directory without conflict.
.TP
.B HUB_SOCKET_PREFIX
Prefix for the hub socket filenames.
This is only recommended for easier identification of the special files;
it is not required and can be set to the empty string.
.TP
.B HUB_SOCKET_EXTENSION
Similar in functionality to
.BR HUB_SOCKET_PREFIX ,
except add to the end of the socket filename.
.TP
.B HUB_LOG
Filepath of the virtual hub log.
This contains informational or error messages from the virtual hub processes.
This log cannot be disabled.
.SS Virtual machine default parameters
Most of these parameters can be overridden by command-line options in
.BR vstart (1)
(and hence
.BR lstart (1)
with the
.B \-\-pass
option).
.TP
.B VM_MEMORY
Default amount of RAM given to the virtual machine (in megabytes).
.IP
.BR vstart (1)
option:
.BR \-M ", " \-\-mem =\fIMEM\fR
.TP
.B VM_MEMORY_SKEW
Some extra memory is required in the virtual machine for miscellaneous data
structures.
This value (in megabytes)
adjusts the amount of memory given to the machine to accomodate for this.
.IP
.BR vstart (1)
option: none.
.TP
.B MIN_MEM
.TQ
.B MAX_MEM
The minimum and maximum allowed emulated memory inside virtual machines, in
megabytes.
These values are used when validating the
.BR vstart (1)
command line arguments and should be set to prevent users from consuming too
many host resources.
In any case,
there are few applications which require more memory than the default.
.IP
.BR vstart (1)
option: none.
.TP
.B MAX_INTERFACES
Maximum number of network interfaces a virtual machine can be equipped with.
Valid interface numbers will range from 0 to
.BI MAX_INTERFACES \-1
(i.e., if the value is \(dq2\(dq,
only \(dqeth0\(dq and \(dqeth1\(dq can be configured).
.IP
.BR vstart (1)
option: none.
.TP
.B VM_MODEL_FS
Filepath to Netkit-JH's model filesystem.
The filesystem must be compatible with the chosen kernel and any COW
filesystems used.
.IP
.BR vstart (1)
option:
.BR \-m ", " \-\-model\-fs =\fIFILE\fR
.TP
.B VM_KERNEL
Filepath to the UML kernel executable.
The kernel must be compatible with the chosen model filesystem.
.IP
.BR vstart (1)
option:
.BR \-k ", " \-\-kernel =\fIFILE\fR
.SS Console configuration parameters
These variables control how the virtual machines' input and output channels are
handled.
.TP
.B VM_CON0
.TQ
.B VM_CON1
The primary and secondary console mode.
Note: only the primary console supports the
.B tmux
mode.
See
.BR vstart (1)
for a complete description of each mode.
.IP
.BR vstart (1)
option:
.BR \-\-con0 =\fIMODE\fR
and
.BR \-\-con1 =\fIMODE\fR
.IP
Values:
.BR xterm ", " tmux ", " pty ", " port: "\fIN\fR, and " none .
.TP
.B TMUX_OPEN_TERMS
If
.BR yes ,
Attach a terminal window to the machine's tmux session.
This uses the terminal set by
.B TERM_TYPE
and only takes effect when the primary console is set to the
.B tmux
mode.
.IP
.BR vstart (1)
option:
.BR \-\-tmux\-attached " and " \-\-tmux\-detached
.IP
Values:
.BR yes / no .
.TP
.B TERM_TYPE
The terminal emulator used when the console is in
.B xterm
mode.
The application must be correctly installed on the host system.
More information on each option can be found in
.BR vstart (1).
.IP
.BR vstart (1)
option:
.BR \-\-xterm =\fITYPE\fR
.IP
Values:
.BR alacritty ", " gnome ", " kitty ", " kitty\-tab ", " konsole ", " wsl ", "
.BR wt ", and " xterm .
.SS Lab launch parameters
These options control how a lab is started.
Some can be overridden by
.BR lstart (1)
options.
.TP
.B MAX_SIMULTANEOUS_VMS
The maximum number of virtual machines that can be started simultaneously when
parallel startup is enabled.
A value of \(dq0\(dq corresponds to setting no limit
(which should cause no issue with reasonable usage on a modern system).
For more information on parallel startup, see
.BR lab.dep (5).
.IP
.BR lstart (1)
option:
.BR \-p [\fIVALUE\fR]
.TP
.B GRACE_TIME
Wait the specified amount of time (in seconds) before launching the next
machine.
This is only used during parallel startup or when fast mode is enabled
.RB ( \-\-fast ).
.IP
.BR lstart (1)
option:
.BR \-w ", " \-\-wait =\fISECONDS\fR
.SS Automatic update checking configuration
.TP
.B CHECK_FOR_UPDATES
If
.BR yes ,
when starting a lab Netkit-JH will check for an updated version on GitHub and
advise the user to update if one exists.
.IP
Values:
.BR yes / no .
.TP
.B UPDATE_CHECK_PERIOD
How many days to wait before checking for a new release again.
.SH EXAMPLES
The following is an example configuration file that overrides the defaults in
.BI NETKIT_HOME /netkit.conf.default
to enable command logging and, by default,
start machines with a detached tmux session.
.PP
.RS 4
.BI NETKIT_HOME /netkit.conf
.RE
.RS
.nf
#!/usr/bin/env bash

# This script contains user-defined overrides for Netkit configuration
# parameters - it is not intended for standalone usage. For reference, see
# netkit.conf.default or netkit.conf(5).
# NOTE: this file is designed to be sourced by script_utils, it must therefore
# be valid Bash.

LOGFILENAME="$HOME/.netkit/commands.log"

VM_CON0=tmux
VM_CON1=none
TMUX_OPEN_TERMS=no
.fi
.RE
.SH AUTHORS
Netkit-JH is maintained by Adam Bromiley, Joshua Hawking,
and other important contributors who are current or graduate students of WMG,
University of Warwick.
A full list of contributors can be found in copyright notices at the top of
source files.
.PP
Netkit-JH is a fork of the now deprecated Netkit-NG,
maintained by Julien Iguchi-Cartigny of the XLIM Research Institute,
which itself is a fork of the original project (Netkit).
Netkit was written by academics at the Computer Networks Laboratory of Roma Tre
University before being abandoned in favour of Kathar√°,
which utilises Python and Docker instead of Bash and UML.
All iterations of Netkit have introduced important new features and upgraded
existing ones.
.SH "REPORTING BUGS"
To report a bug with Netkit-JH,
please create an issue with the recommended template on the project's
.UR https://github.com/netkit-jh/netkit-jh-build/issues
GitHub repository
.UE .
For a more complex bug that you know how to fix,
please consider writing a patch and sending it as a pull request to the GitHub.
.SH COPYRIGHT
Like its predecessors,
Netkit-JH is released under the terms of the GNU General Public License,
version 3 or later. For a copy of the license see the included
.I LICENSE.txt
file or, if not present,
.UR http://www.gnu.org/licenses/
.UE .
.SH "SEE ALSO"
.BR lstart (1),
.BR vpackage (1),
.BR vstart (1),
.BR lab.conf (5),
.BR lab.dep (5),
.BR netkit-jh (7)
