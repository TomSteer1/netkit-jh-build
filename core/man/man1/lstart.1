.TH LSTART 1 2022-08-30 Linux "Netkit-JH Manual"
.SH NAME
lstart \- start a Netkit-JH lab
.SH SYNOPSIS
.B lstart
.RI [ OPTION "]... [" MACHINE ]...
.SH DESCRIPTION
Start all machines of a Netkit-JH lab and configure them and the virtual
network according to parameters assigned in
.IR lab.conf .
.PP
If invoked with no non-option arguments,
.B lstart
starts all virtual machines that comprise the lab.
Providing a list of
.IR MACHINE s
allows the user to be explicit with what machines are booted.
Any invalid
.I MACHINE
names will be ignored.
.PP
Refer to
.BR lab.conf (5)
for a description of what a Netkit-JH lab consists of and how to configure one.
For more information on how machines are started, see
.BR vstart (1),
which is used on each individual machine to boot it.
.SH OPTIONS
Unless specified otherwise, all options are also supported by
.BR ltest (1).
.SS General options
.TP
.BI \-d " DIR"
Crash the lab inside
.IR DIR .
By default, the current directory is used.
To avoid starting undesired virtual machines,
.B lstart
will not start labs from directories without a
.I lab.conf
and
.I lab.dep
file.
To skip this check, refer to
.BR \-\-force\-lab .
.TP
.BR \-F ", " \-\-force\-lab
Ignore checks for
.I lab.conf
and
.IR lab.dep .
By default, if the files do not exist
.B lstart
will immediately exit from the boot process.
.TP
.BR \-l ", " \-\-list
Show a list of virtual machines still running after starting the lab with
.BR vlist (1).
This may produce only a partial report with
.B \-\-fast
since machines are started in the background by default,
and
.B lstart
will typically finish before they are fully booted.
.SS Options affecting how the lab is started
.TP
.BR \-f ", " \-\-fast
Do not wait for a virtual machine to fully boot before starting the next one.
This option has no effect when parallel startup is enabled (which it is by
default when a
.I lab.dep
file exists or with
.BR \-p ).
.BR ltest (1)
does not support this option.
.TP
.BR \-p [\fIVALUE\fR]
Enable parallel startup for the lab even if a
.I lab.dep
file does not exist.
To change the number of machines that can be started simultaneously,
the Netkit-JH configuration variable,
.BR MAX_SIMULTANEOUS_VMS ,
can be overrode with
.IR VALUE .
Since it is an optional argument, if specified
.I VALUE
must be attached to the short option
.RB ( \-p \fIVALUE\fR).
Parallel mode is enabled by default if a
.I lab.dep
file exists and
.B \-\-sequential
is not used.
.IP
Note: GNU Make must be installed to build the dependency tree.
.TP
.BR \-s ", " \-\-sequential
Disable parallel startup, even if a
.I lab.dep
file exists.
Machines will start one after the other;
this can be useful if specific machines are stated as non-option arguments but
they have dependencies which the user does not want booted.
This option conflicts with
.BR \-p .
.TP
.BR \-w ", " \-\-wait =\fISECONDS\fR
Wait the specified amount of time before booting the next virtual machine.
This is only useful when parallel startup is enabled
(for example, if a lab's DHCP server requires time to allocate addresses)
or with
.B \-\-fast
to reduce load on the host machine.
This option overrides the
.B GRACE_TIME
Netkit-JH configuration variable.
.SS Options affecting how machines are started
.TP
.BR \-o ", " \-\-pass =\fIARG\fR
Pass arguments unaltered to the underlying
.B vstart
command for each machine.
This will affect the invocation of every machine.
See
.BR vstart (1)
for valid arguments.
.TP
.B \-\-tmux\-attached
Run each machine in a tmux session and start a terminal attached to this tmux
session.
This is equivalent to setting the
.B VM_CON0
and
.B TMUX_OPEN_TERMS
Netkit-JH configuration variables to
.B tmux
and
.B yes
respectively.
.TP
.B \-\-tmux\-detached
Run each machine in a tmux session without opening any terminals.
This is equivalent to setting the
.B VM_CON0
and
.B TMUX_OPEN_TERMS
Netkit-JH configuration variables to
.B tmux
and
.B no
respectively.
.SS Miscellaneous options
.TP
.B \-\-help
Display a usage message and exit.
.TP
.BR \-v ", " \-\-verbose
Show details about virtual machines while starting them.
.TP
.B \-\-version
Output version information and exit.
.SH ENVIRONMENT
.TP
.B NETKIT_HOME
All Netkit-JH commands require that the
.B NETKIT_HOME
variable is set the path of the directory which Netkit-JH is installed in.
.SH FILES
.TP
.I lab.conf
Located in the lab directory,
.I lab.conf
is used to read the configuration of each virtual machine in a lab.
The
.B LAB_MACHINES
configuration variable, if exists, is also read for the user to override the
default behaviour of determining the hostname list from the directory listing.
The file is also used to get lab information from the special lab variables.
See
.BR lab.conf (5)
for more information.
.TP
.I lab.dep
Located in the lab directory,
.I lab.dep
is used to determine if the lab supports parallel startup and to read the
dependency tree.
See
.BR lab.dep (5)
for more information.
.TP
.I MACHINE.disk
Each
.I .disk
file is a machine's copy-on-write (COW) filesystem,
storing changes made to the machine during runtime.
These files are removed by default with
.BR lcrash (1),
however
.BR lhalt (1)
will retain them for rebooting the machines to their states when the lab was
shut down.
Like other temporary lab files,
.BR lclean (1)
may be used to remove them before restarting the lab.
For more information on the COW filesystems, see
.BR netkit-jh (7).
.TP
.I MACHINE.ready
Temporary files used by
.B lstart
to determine which machines have fully booted.
Unless
.B \-\-fast
is used,
.B lstart
will not exit until the machine's
.I .ready
file has been detected.
Sometimes, like when a machine fails in the boot phase, there may be
.I .ready
files left in the lab directory.
In this instance,
.BR lclean (1)
may be required to remove them before restarting the lab.
.SH AUTHORS
Netkit-JH is maintained by Adam Bromiley, Joshua Hawking,
and other important contributors who are current or graduate students of WMG,
University of Warwick.
A full list of contributors can be found in copyright notices at the top of
source files.
.PP
Netkit-JH is a fork of the now deprecated Netkit-NG,
maintained by Julien Iguchi-Cartigny of the XLIM Research Institute,
which itself is a fork of the original project (Netkit).
Netkit was written by academics at the Computer Networks Laboratory of Roma Tre
University before being abandoned in favour of Kathar√°,
which utilises Python and Docker instead of Bash and UML.
All iterations of Netkit have introduced important new features and upgraded
existing ones.
.SH "REPORTING BUGS"
To report a bug with Netkit-JH,
please create an issue with the recommended template on the project's
.UR https://github.com/netkit-jh/netkit-jh-build/issues
GitHub repository
.UE .
For a more complex bug that you know how to fix,
please consider writing a patch and sending it as a pull request to the GitHub.
.SH COPYRIGHT
Like its predecessors,
Netkit-JH is released under the terms of the GNU General Public License,
version 3 or later. For a copy of the license see the included
.I LICENSE.txt
file or, if not present,
.UR http://www.gnu.org/licenses/
.UE .
.SH "SEE ALSO"
.BR lclean (1),
.BR lcrash (1),
.BR lhalt (1),
.BR linfo (1),
.BR ltest (1),
.BR vlist (1),
.BR vstart (1),
.BR lab.conf (5),
.BR lab.dep (5),
.BR netkit.conf (5)
