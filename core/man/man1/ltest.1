.TH LTEST 1 2022-08-31 Linux "Netkit-JH Manual"
.SH NAME
ltest \- test a Netkit-JH lab
.SH SYNOPSIS
.B ltest
.RI [ OPTION "]... [" MACHINE ]...
.SH DESCRIPTION
Perform tests on a Netkit-JH lab by launching the lab and running a set of
Netkit-JH or user-supplied test scripts on each machine.
Results are saved to the lab directory on the host and checked for failures.
After all tests are ran, the lab is halted.
.PP
When run, the
.I _test
directory is created inside the lab directory.
The user may premake this and create their own scripts inside the
.I _test/scripts/
subdirectory to be ran either on specific hosts (named
.IR MACHINE.test ", where " MACHINE
is the hostname) or on all hosts (named
.IR shared.test ).
The scripts must be executable and can include a shebang if using Bash as the
interpreter is undesired.
The default test script provided with Netkit-JH lists a host's network
interfaces, routing table, active ports, and running processes.
See
.I /etc/netkit/netkit-test-phase
in the Netkit-JH filesystem for more information.
.PP
The testing is conducted at the end of the startup sequence's second phase once
all machines have started (existence of the
.I readyfor.test
file in the lab directory) and the time delay has elapsed (see
.BR \-\-delay ).
The scripts are ran in the following order: shared, user, then default.
Note: unless overridden, machines are launched without an attached terminal.
.PP
Result files are stored in
.I _test/results/
and named with a basename of
.IR MACHINE \(emthe
virtual machine's hostname\(emand extension of
.IR shared ", " user ", or " default
if they were results of a shared, user-created,
or stock test script respectively.
.PP
To clarify, the following directory structure is typical:
.PP
.RS
.I _test/
.RS
.I results/
.RS
.I a.default
.br
.I a.shared
.br
.I a.user
.br
.I b.default
.br
.I b.shared
.RE
.I scripts/
.RS
.I a.test
.br
.I shared.test
.RE
.RE
.RE
.PP
If invoked with no non-option arguments,
.B ltest
tests all virtual machines that comprise the lab.
Providing a list of
.IR MACHINE s
allows the user to be explicit with what machines are tested.
Any invalid
.I MACHINE
names will be ignored.
.PP
Refer to
.BR lab.conf (5)
for a description of what a Netkit-JH lab consists of and how to configure one.
For more information on how machines are started, see
.BR vstart (1),
which is used on each individual machine to boot it, and
.BR lstart (1),
which is what the
.B ltest
script is a symbolic link to;
.B ltest
supports all the same options except
.B \-\-fast
and has an additional option,
.BR \-\-delay .
.SH OPTIONS
See
.BR lstart (1)
for a full list of supported options (note:
.BR -f ", " \-\-fast
is exclusive to
.BR lstart ).
.SS Options affecting the test phase
.TP
.BR \-\-delay =\fINUMBER\fR[\fISUFFIX\fR]
Wait the specified amount of time after the lab starts (detected with
.IR readyfor.test )
before executing test scripts.
This can be used to allow the lab to settle
(such as giving time for a DHCP server to allocate addresses).
By default there is no delay.
.I NUMBER
and, optionally,
.I SUFFIX
(the unit of time) must be valid to
.BR sleep (1).
.SH ENVIRONMENT
.TP
.B NETKIT_HOME
All Netkit-JH commands require that the
.B NETKIT_HOME
variable is set the path of the directory which Netkit-JH is installed in.
.SH FILES
.TP
.I netkit.conf
.TQ
.BI NETKIT_HOME /netkit.conf.default
Netkit-JH stores its configuration settings inside a file named
.IR netkit.conf ,
which can be placed in up to three locations to change its scope.
The default settings are assigned in
.IR netkit.conf.default ;
the existence of this file is required in order to make Netkit-JH work.
See
.BR netkit.conf (5)
for information about these files.
.TP
.I _test/results/MACHINE.default
.TQ
.I _test/results/MACHINE.shared
.TQ
.I _test/results/MACHINE.user
Output of the stock, shared, and user-created test results for
.IR MACHINE ,
respectively.
.TP
.I _test/scripts/MACHINE.test
.TQ
.I _test/scripts/shared.test
User-created tests to be ran on either just
.I MACHINE
or all machines, respectively.
The files can be any kind of executable script or binary and,
unless a shebang is used,
are interpreted by Bash.
.TP
.I readyfor.test
Temporary file created by
.B ltest
once all virtual machines are online.
This signals to the machines that their test phase can commence.
.TP
.RI MACHINE .testdone
File created in the lab directory by the virtual machine when the test phase
has completed.
This temporary file is used by
.B ltest
to determine when all machines have finished their tests.
.TP
.I /etc/netkit/netkit-test-phase
Located in the Netkit-JH filesystem,
this file can be modified to change the stock test functionality.
To make permanent changes to the file, use
.BR vstart (1)'s \-\-no\-cow
or directly mount the filesystem to your host.
.TP
.I lab.conf
Located in the lab directory,
.I lab.conf
is used to read the configuration of each virtual machine in a lab.
The
.B LAB_MACHINES
configuration variable, if exists, is also read for the user to override the
default behaviour of determining the hostname list from the directory listing.
The file is also used to get lab information from the special lab variables.
See
.BR lab.conf (5)
for more information.
.TP
.I lab.dep
Located in the lab directory,
.I lab.dep
is used to determine if the lab supports parallel startup and to read the
dependency tree.
See
.BR lab.dep (5)
for more information.
.TP
.RI MACHINE .disk
Each
.I .disk
file is a machine's copy-on-write (COW) filesystem,
storing changes made to the machine during runtime.
These files are removed by default with
.BR lcrash (1),
however
.BR lhalt (1)
will retain them for rebooting the machines to their states when the lab was
shut down.
Like other temporary lab files,
.BR lclean (1)
may be used to remove them before restarting the lab.
For more information on the COW filesystems, see
.BR netkit-jh (7).
.TP
.RI MACHINE .ready
Temporary files used by
.B lstart
to determine which machines have fully booted.
Unless
.B \-\-fast
is used,
.B lstart
will not exit until the machine's
.I .ready
file has been detected.
Sometimes, like when a machine fails in the boot phase, there may be
.I .ready
files left in the lab directory.
In this instance,
.BR lclean (1)
may be required to remove them before restarting the lab.
.SH AUTHORS
Netkit-JH is maintained by Adam Bromiley, Joshua Hawking,
and other important contributors who are current or graduate students of WMG,
University of Warwick.
A full list of contributors can be found in copyright notices at the top of
source files.
.PP
Netkit-JH is a fork of the now deprecated Netkit-NG,
maintained by Julien Iguchi-Cartigny of the XLIM Research Institute,
which itself is a fork of the original project (Netkit).
Netkit was written by academics at the Computer Networks Laboratory of Roma Tre
University before being abandoned in favour of Kathar√°,
which utilises Python and Docker instead of Bash and UML.
All iterations of Netkit have introduced important new features and upgraded
existing ones.
.SH "REPORTING BUGS"
To report a bug with Netkit-JH,
please create an issue with the recommended template on the project's
.UR https://github.com/netkit-jh/netkit-jh-build/issues
GitHub repository
.UE .
For a more complex bug that you know how to fix,
please consider writing a patch and sending it as a pull request to the GitHub.
.SH COPYRIGHT
Like its predecessors,
Netkit-JH is released under the terms of the GNU General Public License,
version 3 or later. For a copy of the license see the included
.I LICENSE.txt
file or, if not present,
.UR http://www.gnu.org/licenses/
.UE .
.SH "SEE ALSO"
.BR lclean (1),
.BR lcrash (1),
.BR lhalt (1),
.BR linfo (1),
.BR lstart (1),
.BR vstart (1),
.BR lab.conf (5),
.BR lab.dep (5),
.BR netkit.conf (5)
